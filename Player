package sample;

import javafx.application.Application;
import javafx.beans.binding.Bindings;
import javafx.beans.property.DoubleProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Rectangle2D;
import javafx.scene.Scene;
import javafx.scene.layout.BorderPane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import javafx.stage.FileChooser;
import javafx.stage.Screen;
import javafx.stage.Stage;

import java.io.File;

public class Player extends Application{
    static Rectangle2D dim = Screen.getPrimary().getVisualBounds();
   static  double width = dim.getWidth();
    static double height = dim.getHeight();
    static boolean isPlaying=false;
    BorderPane layout;
   static  MediaPlayer mplayer;
    static Media media;
    static Media song;
  static   MediaView mview;

    @Override
    public void start(Stage primaryStage) throws Exception {
        //Import view and set its properties
        mview = View.getMediaView();
        mview.isSmooth();
        //Let the borderpane to get the layout from the view class
        layout = new BorderPane();
       layout.setTop(View.getTopBar());
        layout.setBottom(View.getControls());
        layout.setCenter(mview);

        Scene scene= new Scene(layout, width, height * 0.94);
        primaryStage.setTitle("VIDEO PLAYER");
        primaryStage.setScene(scene);
        primaryStage.show();




               final DoubleProperty width = mview.fitWidthProperty();
               final DoubleProperty height = mview.fitHeightProperty();

               width.bind(Bindings.selectDouble(mview.sceneProperty(), "width"));
               height.bind(Bindings.selectDouble(mview.sceneProperty(), "height"));

               mview.setPreserveRatio(true);
               primaryStage.setFullScreen(true);



    }




    private static void play(File file) {
        if(isPlaying==true)
            mplayer.stop();
        media=new Media(file.toURI().toString());
        mplayer= new MediaPlayer(media);
         mview.setMediaPlayer(mplayer);
        mplayer.setAutoPlay(true);
        isPlaying=true;



    }
    public void play(){
        while(!(Library.files.isEmpty())) {
            media = song;
            mplayer = new MediaPlayer(media);
            mview.setMediaPlayer(mplayer);
            mplayer.play();

            isPlaying = true;
        }
    }

    public static void main(String[] args) {
        launch(args);
    }

    static class Library {
    int currPosition=0;
   static ObservableList<File> files= FXCollections.observableArrayList();

        public static void addSong() {
            FileChooser fc = new FileChooser();
            fc.setTitle("Select one file to play");
            fc.getExtensionFilters().addAll(new FileChooser.ExtensionFilter
                    ("Mp4 files..",".mp4"));
            File file=fc.showOpenDialog(null);

               play(file);

        }
    }

}
